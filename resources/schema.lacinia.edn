{
 ;; //
 :objects
 {:Ping
  {:description "Captures a message and a timestamp. This is used when testing Subscriptions."
   :fields
   {:message {:type (non-null String)}
    :timestamp {:type (non-null Int)}}}

  :Game
  {:description "Container for game events."
   :fields
   {:message {:type (non-null String)}}}

  :Tick
  {:fields
   {:message {:type (non-null String)}}}

  :CreateGamekAck
  {:fields
   {:message {:type (non-null String)}}}

  :BuyStockAck
  {:fields
   {:message {:type (non-null String)}}}

  :SellStockAck
  {:fields
   {:message {:type (non-null String)}}}}


 ;; //
 :input-objects
 {:BuyStock
  {:description "An event to buy a stock"
   :fields
   {:gameId {:type (non-null String)}
    :stockId {:type (non-null String)}
    :stockAmount {:type (non-null Int)}
    :tickId {:type (non-null String)}
    :tickTime {:type (non-null Int)}
    :tickPrice {:type (non-null Float)}}}

  :SellStock
  {:description "An event to sell a stock"
   :fields
   {:gameId {:type (non-null String)}
    :stockId {:type (non-null String)}
    :stockAmount {:type (non-null Int)}
    :tickId {:type (non-null String)}
    :tickTime {:type (non-null Int)}
    :tickPrice {:type (non-null Float)}}}}


 ;; //
 :queries
 {:hello
  {:type String
   :resolve :resolve-hello}

  :login
  {:type String
   :resolve :resolve-login}}


 ;; //
 :mutations
 {:createGame
  {:type :CreateGamekAck
   :description "Creates a new game"
   :resolve :resolve-create-game}

  :buyStock
  {:type :BuyStockAck
   :args {:input {:type :BuyStock}}
   :resolve :resolve-buy-stock}

  :sellStock
  {:type :SellStockAck
   :args {:input {:type :SellStock}}
   :resolve :resolve-sell-stock}}


 ;; //
 :subscriptions
 {:ping
  {:type :Ping
   :description "Sends the provided message a particular number of times, as a subscription."
   :stream :stream-ping
   :args
   {:count {:type Int
            :default 5}
    :message {:type (non-null String)}}}

  :startGame
  {:type :Tick
   :description "Starts streaming a game's stock subscription."
   :stream :stream-new-game
   :args
   {:id {:type (non-null String)}}}}}
